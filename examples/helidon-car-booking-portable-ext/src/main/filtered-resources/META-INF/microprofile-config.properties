# Microprofile server properties
server.port=8080


#podman run -d --name ollama --replace --pull=always --restart=always -p 11434:11434 -v ollama:/root/.ollama --stop-signal=SIGKILL docker.io/ollama/ollama^C
#podman  exec -it ollama ollama run llama3.1



dev.langchain4j.plugin.chat-model.class=dev.langchain4j.model.ollama.OllamaChatModel
dev.langchain4j.plugin.chat-model.config.base-url=http://localhost:11434
dev.langchain4j.plugin.chat-model.config.temperature=0.1
dev.langchain4j.plugin.chat-model.config.model-name=llama3.1:latest
dev.langchain4j.plugin.chat-model.config.log-requests=true
dev.langchain4j.plugin.chat-model.config.log-responses=true

dev.langchain4j.plugin.docRagRetriever.class=dev.langchain4j.rag.content.retriever.EmbeddingStoreContentRetriever
dev.langchain4j.plugin.docRagRetriever.config.embeddingStore=lookup:default
dev.langchain4j.plugin.docRagRetriever.config.embeddingModel=lookup:default
dev.langchain4j.plugin.docRagRetriever.config.maxResults=3
dev.langchain4j.plugin.docRagRetriever.config.minScore=0.6

# Chat Memory used by ChatAiService class
dev.langchain4j.plugin.chat-ai-service-memory.class=dev.langchain4j.memory.chat.MessageWindowChatMemory
dev.langchain4j.plugin.chat-ai-service-memory.scope=jakarta.enterprise.context.ApplicationScoped
dev.langchain4j.plugin.chat-ai-service-memory.config.maxMessages=10

# Chat Memory used by FraudAiService class
dev.langchain4j.plugin.fraud-ai-service-memory.class=dev.langchain4j.memory.chat.MessageWindowChatMemory
dev.langchain4j.plugin.fraud-ai-service-memory.scope=jakarta.enterprise.context.ApplicationScoped
dev.langchain4j.plugin.fraud-ai-service-memory.config.maxMessages=5

smallrye.llm.embedding.store.in-memory.file=embedding.json

# Chat memory configuration, used by ChatAiFactory
chat.memory.max.messages=20

# Fraud detection configuration, used by FraudAiFactory
fraud.memory.max.messages=20

# Location of documents to RAG
app.docs-for-rag.dir=docs-for-rag



